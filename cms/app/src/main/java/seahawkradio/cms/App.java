/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package seahawkradio.cms;

import org.slf4j.LoggerFactory;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import org.slf4j.Logger;

import io.javalin.Javalin;
import io.javalin.http.staticfiles.Location;

public class App {
    private static final Logger LOG = LoggerFactory.getLogger(App.class);

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        final String databaseURL = "jdbc:sqlite:seahawkradio-cms.db";

        LOG.info("initializing Seahawk Radio CSM");

        // Supress resource not closed lint
        // it isn't necessary to explicitly call close on Javalin apps.
        @SuppressWarnings("java:S2095")
        Javalin app = Javalin.create(config -> {
            config.addStaticFiles("static", Location.CLASSPATH);
        });

        try {
            LOG.info("opening database connection '{}'", databaseURL);

            // AFAIK there's no reason to pool SQLite connections.
            // They're also threadsafe so we can just create one for the lifetime of this
            // application
            final Connection conn = DriverManager.getConnection("jdbc:sqlite:seahawkradio-cms.db");
            app.attribute("database", conn);
        } catch (SQLException e) {
            LOG.error("failed to open database '{}'", databaseURL, e);
            System.exit(1);
        }

        app.get("/", ctx -> ctx.render("index.jte"));
        app.post("/login", UserController.login);
        app.start(8080);
    }
}
